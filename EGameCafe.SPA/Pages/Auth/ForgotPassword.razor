@page "/forgotpassword"
@inject IAccountService _accountService
@inject NavigationManager _navigationManager
@inject IResponseService _responseService


<style>

    .validation-message {
        text-align: left;
        padding-left: 25px;
    }

    .alert-danger {
        text-align: left;
        color: #ff172d;
        background-color: #141519;
        border: none;
        padding-left: 40px;
        margin-bottom: 0 !important;
    }

    .panel .login-input {
        margin-top: 10px;
        background-color: #22232a;
        -webkit-border-radius: 45px;
        -moz-border-radius: 45px;
        border-radius: 45px;
        font-size: 15px;
        height: 45px;
        border: none;
        padding-left: 15px;
        width: 330px;
        margin-bottom: 10px;
    }

        .panel .login-input[placeholder] {
            color: #656d79;
            font-size: 15px;
            font-weight: 500;
        }
</style>

<div class="panel">
    <div class="state">
        <br /><br />
        <h2>Enter Your Phone</h2>
        <h2>Number Then Check</h2>
        <h2>Your Messages</h2>
    </div>
    <br><br />

    <DisplayNotification Notification="Notification" />

    <EditForm Model="ViewModel" OnValidSubmit="HandleForgotPassword">
        <FluentValidator></FluentValidator>

        <ValidationMessage For="@(() => ViewModel.Email)" />
        <InputText @bind-Value="ViewModel.Email" placeholder="Email" class="login-input" />

        <ValidationMessage For="@(() => ViewModel.Confirmation)" />
        <InputText @bind-Value="ViewModel.Confirmation" placeholder="Phone Number" class="login-input" />

        <button class="login">Send Code</button>

    </EditForm>


</div>

@code{

    public string PageUri { set; get; } = "/forgotpassword";

    public ForgotPasswordModel ViewModel { get; set; } = new ForgotPasswordModel();
    public NotificationModel Notification { get; set; } = new NotificationModel();


    protected async Task HandleForgotPassword()
    {
        var result = await _accountService.ForgotPassword(ViewModel);

        var notifResult = await _responseService.ResponseResultChecker(result, PageUri, "لاگین با موفقیت انجام شد");

        if (result.Status != 200)
        {
            Notification = notifResult;
        }
        else
        {
            _navigationManager.NavigateTo("/otp/forgotpassword", true);
        }
    }

}